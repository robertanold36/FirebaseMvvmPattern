package com.example.newsapp.uiimport android.os.Bundleimport android.view.*import androidx.fragment.app.Fragmentimport androidx.databinding.DataBindingUtilimport androidx.lifecycle.Observerimport androidx.lifecycle.ViewModelProvidersimport androidx.navigation.findNavControllerimport androidx.recyclerview.widget.LinearLayoutManagerimport com.example.newsapp.data.DataRepositoryimport com.example.newsapp.adapters.InfoAdapterimport com.example.newsapp.Rimport com.example.newsapp.databinding.FragmentHomeBindingimport com.example.newsapp.viewmodel.InfoViewModelimport com.example.newsapp.viewmodel.InfoViewModelFactoryimport com.google.firebase.storage.FirebaseStorageclass HomeFragment : Fragment(){    private val repository= DataRepository()    private val factory= InfoViewModelFactory(repository)    private val viewModel by lazy { ViewModelProviders.of(activity!!,factory).get(InfoViewModel::class.java) }    private lateinit var adapter: InfoAdapter    companion object{        lateinit var storage:FirebaseStorage    }    override fun onCreateView(        inflater: LayoutInflater, container: ViewGroup?,        savedInstanceState: Bundle?    ): View? {        // Inflate the layout for this fragment        val binding:FragmentHomeBinding=DataBindingUtil.inflate(inflater,            R.layout.fragment_home,container,false)        binding.upload.setOnClickListener {            it.findNavController().navigate(R.id.action_homeFragment_to_contentFragment)        }        adapter= InfoAdapter(activity!!)        binding.recyclerView.layoutManager=LinearLayoutManager(context)        binding.recyclerView.adapter= adapter        binding.shimmerView.startShimmer()        viewModel.getAllInformation().observe(activity!!, Observer {            binding.shimmerView.hideShimmer()            binding.shimmerView.stopShimmer()            binding.shimmerView.visibility=View.GONE            adapter.setList(it)            adapter.notifyDataSetChanged()        })        return binding.root    }}